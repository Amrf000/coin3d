// This demonstrates the following bug in Coin: we're allowed to
// replace a sub-dragger part of a composite dragger with a
// "non-sub-dragger" node / sub-scenegraph without setPart() returning
// FALSE.  This later causes a crash-bug when the replacement part is
// selected for dragging.
//
// Should fix by either 1) catch and return FALSE on setPart() on
// attempts to replace sub-draggers in this way (which is what SGI
// Inventor does), or perhaps even 2) accept replacing sub-draggers
// with ordinary sub-graphs as now *and* fix the code handling drag
// operations to not fail.  (#1 is probably the only viable solution?)
//
// Note: this bug is also present in Coin-1.
//
// Reported: 20010930 mortene
// Severity: low (robustness fix)

#include <Inventor/@Gui@/So@Gui@.h>
#include <Inventor/@Gui@/viewers/So@Gui@ExaminerViewer.h>
#include <Inventor/draggers/SoDragPointDragger.h>
#include <Inventor/nodes/SoSeparator.h>
#include <Inventor/nodes/SoSphere.h>

// *************************************************************************

int
main(int argc, char ** argv )
{
  @WIDGET@ window = So@Gui@::init(argv[0]);

  SoSeparator * newpart = new SoSeparator;
  SoSphere * sph = new SoSphere;
  sph->radius = 0.4f;
  newpart->addChild(sph);

  SoDragPointDragger * dpd = new SoDragPointDragger;
  dpd->ref();

  SbBool r;
#if 0 // this works fine
  r = dpd->setPart("yTranslator.translator", newpart);
#else // this is an operation which should make setPart() fail
  r = dpd->setPart("yTranslator", newpart);
#endif
  assert(r); // <- hits with SGI Inventor, but not with Coin

  So@Gui@ExaminerViewer * viewer = new So@Gui@ExaminerViewer(window);
  viewer->setSceneGraph(dpd);
  viewer->show();
  So@Gui@::show(window);

  So@Gui@::mainLoop();

  delete viewer;
  dpd->unref();
  return 0;
}

// *************************************************************************
