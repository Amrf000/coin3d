# Makefile.in generated automatically by automake 1.4e from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

@SET_MAKE@
AMDEP = @AMDEP@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
CC = @CC@
COIN_DOC_HTML = @COIN_DOC_HTML@
COIN_DOC_MAN = @COIN_DOC_MAN@
COIN_EXTRA_CPPFLAGS = @COIN_EXTRA_CPPFLAGS@
COIN_EXTRA_CXXFLAGS = @COIN_EXTRA_CXXFLAGS@
COIN_EXTRA_LDFLAGS = @COIN_EXTRA_LDFLAGS@
COIN_EXTRA_LIBS = @COIN_EXTRA_LIBS@
COIN_HACKING_LIBDIRS = @COIN_HACKING_LIBDIRS@
COIN_MAJOR_VERSION = @COIN_MAJOR_VERSION@
COIN_MICRO_VERSION = @COIN_MICRO_VERSION@
COIN_MINOR_VERSION = @COIN_MINOR_VERSION@
COIN_VERSION = @COIN_VERSION@
CONFIG = @CONFIG@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSUFFIX = @DSUFFIX@
EXEEXT = @EXEEXT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTALL_STRIP_PROGRAM_ENV = @INSTALL_STRIP_PROGRAM_ENV@
LIBFLAGS = @LIBFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
SUFFIX = @SUFFIX@
VERSION = @VERSION@
_am_include = @_am_include@
coin_build_dir = @coin_build_dir@
coin_configure_date = @coin_configure_date@
coin_html_dir = @coin_html_dir@
coin_man_dir = @coin_man_dir@
coin_src_dir = @coin_src_dir@
install_sh = @install_sh@
path_tag = @path_tag@
sim_ac_doxygen_exe = @sim_ac_doxygen_exe@
sim_ac_perl_exe = @sim_ac_perl_exe@
sim_ac_simage_configcmd = @sim_ac_simage_configcmd@


RegularSources = \
	SoField.cpp \
	SoFieldContainer.cpp \
	SoFieldData.cpp \
	SoMFBitMask.cpp \
	SoMFBool.cpp \
	SoMFColor.cpp \
	SoMFEngine.cpp \
	SoMFEnum.cpp \
	SoMFFloat.cpp \
	SoMFInt32.cpp \
	SoMFMatrix.cpp \
	SoMFName.cpp \
	SoMFNode.cpp \
	SoMFPath.cpp \
	SoMFPlane.cpp \
	SoMFRotation.cpp \
	SoMFShort.cpp \
	SoMFString.cpp \
	SoMFTime.cpp \
	SoMFUInt32.cpp \
	SoMFUShort.cpp \
	SoMFVec2f.cpp \
	SoMFVec3f.cpp \
	SoMFVec4f.cpp \
	SoMField.cpp \
	SoSFBitMask.cpp \
	SoSFBool.cpp \
	SoSFColor.cpp \
	SoSFEngine.cpp \
	SoSFEnum.cpp \
	SoSFFloat.cpp \
	SoSFImage.cpp \
	SoSFInt32.cpp \
	SoSFMatrix.cpp \
	SoSFName.cpp \
	SoSFNode.cpp \
	SoSFPath.cpp \
	SoSFPlane.cpp \
	SoSFRotation.cpp \
	SoSFShort.cpp \
	SoSFString.cpp \
	SoSFTime.cpp \
	SoSFTrigger.cpp \
	SoSFUInt32.cpp \
	SoSFUShort.cpp \
	SoSFVec2f.cpp \
	SoSFVec3f.cpp \
	SoSFVec4f.cpp \
	SoSField.cpp \
	SoGlobalField.cpp

LinkHackSources = \
	all.cpp

PublicHeaders = \
	$(top_srcdir)/include/Inventor/fields/SoSubField.h \
	$(top_srcdir)/include/Inventor/fields/SoFields.h \
	$(top_srcdir)/include/Inventor/fields/SoField.h \
	$(top_srcdir)/include/Inventor/fields/SoFieldContainer.h \
	$(top_srcdir)/include/Inventor/fields/SoFieldData.h \
	$(top_srcdir)/include/Inventor/fields/SoMFBitMask.h \
	$(top_srcdir)/include/Inventor/fields/SoMFBool.h \
	$(top_srcdir)/include/Inventor/fields/SoMFColor.h \
	$(top_srcdir)/include/Inventor/fields/SoMFEngine.h \
	$(top_srcdir)/include/Inventor/fields/SoMFEnum.h \
	$(top_srcdir)/include/Inventor/fields/SoMFFloat.h \
	$(top_srcdir)/include/Inventor/fields/SoMFInt32.h \
	$(top_srcdir)/include/Inventor/fields/SoMFLong.h \
	$(top_srcdir)/include/Inventor/fields/SoMFMatrix.h \
	$(top_srcdir)/include/Inventor/fields/SoMFName.h \
	$(top_srcdir)/include/Inventor/fields/SoMFNode.h \
	$(top_srcdir)/include/Inventor/fields/SoMFPath.h \
	$(top_srcdir)/include/Inventor/fields/SoMFPlane.h \
	$(top_srcdir)/include/Inventor/fields/SoMFRotation.h \
	$(top_srcdir)/include/Inventor/fields/SoMFShort.h \
	$(top_srcdir)/include/Inventor/fields/SoMFString.h \
	$(top_srcdir)/include/Inventor/fields/SoMFTime.h \
	$(top_srcdir)/include/Inventor/fields/SoMFUInt32.h \
	$(top_srcdir)/include/Inventor/fields/SoMFULong.h \
	$(top_srcdir)/include/Inventor/fields/SoMFUShort.h \
	$(top_srcdir)/include/Inventor/fields/SoMFVec2f.h \
	$(top_srcdir)/include/Inventor/fields/SoMFVec3f.h \
	$(top_srcdir)/include/Inventor/fields/SoMFVec4f.h \
	$(top_srcdir)/include/Inventor/fields/SoMField.h \
	$(top_srcdir)/include/Inventor/fields/SoSFBitMask.h \
	$(top_srcdir)/include/Inventor/fields/SoSFBool.h \
	$(top_srcdir)/include/Inventor/fields/SoSFColor.h \
	$(top_srcdir)/include/Inventor/fields/SoSFEngine.h \
	$(top_srcdir)/include/Inventor/fields/SoSFEnum.h \
	$(top_srcdir)/include/Inventor/fields/SoSFFloat.h \
	$(top_srcdir)/include/Inventor/fields/SoSFImage.h \
	$(top_srcdir)/include/Inventor/fields/SoSFInt32.h \
	$(top_srcdir)/include/Inventor/fields/SoSFLong.h \
	$(top_srcdir)/include/Inventor/fields/SoSFMatrix.h \
	$(top_srcdir)/include/Inventor/fields/SoSFName.h \
	$(top_srcdir)/include/Inventor/fields/SoSFNode.h \
	$(top_srcdir)/include/Inventor/fields/SoSFPath.h \
	$(top_srcdir)/include/Inventor/fields/SoSFPlane.h \
	$(top_srcdir)/include/Inventor/fields/SoSFRotation.h \
	$(top_srcdir)/include/Inventor/fields/SoSFShort.h \
	$(top_srcdir)/include/Inventor/fields/SoSFString.h \
	$(top_srcdir)/include/Inventor/fields/SoSFTime.h \
	$(top_srcdir)/include/Inventor/fields/SoSFTrigger.h \
	$(top_srcdir)/include/Inventor/fields/SoSFUInt32.h \
	$(top_srcdir)/include/Inventor/fields/SoSFULong.h \
	$(top_srcdir)/include/Inventor/fields/SoSFUShort.h \
	$(top_srcdir)/include/Inventor/fields/SoSFVec2f.h \
	$(top_srcdir)/include/Inventor/fields/SoSFVec3f.h \
	$(top_srcdir)/include/Inventor/fields/SoSFVec4f.h \
	$(top_srcdir)/include/Inventor/fields/SoSField.h

PrivateHeaders = \
	$(top_srcdir)/include/Inventor/fields/SoSubFieldP.h \
	$(top_srcdir)/include/Inventor/fields/SoGlobalField.h

@HACKING_COMPACT_BUILD_TRUE@BuildSources = $(LinkHackSources)
@HACKING_COMPACT_BUILD_FALSE@BuildSources = $(RegularSources)

@BUILD_WITH_MSVC_TRUE@noinst_LIBRARIES = fields.lst
@BUILD_WITH_MSVC_FALSE@@HACKING_DYNAMIC_MODULES_TRUE@lib_LTLIBRARIES = libfields@SUFFIX@LINKHACK.la
@BUILD_WITH_MSVC_FALSE@@HACKING_DYNAMIC_MODULES_FALSE@noinst_LTLIBRARIES = libfields.la

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/include -I$(top_builddir)/include

libfields_la_SOURCES = $(BuildSources)
EXTRA_libfields_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)


libfields@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libfields@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)


libfieldsincdir = $(includedir)/Inventor/fields
libfieldsinc_HEADERS = $(PublicHeaders)

@BUILD_WITH_MSVC_TRUE@fields_lst_SOURCES = $(BuildSources)
@BUILD_WITH_MSVC_TRUE@EXTRA_fields_lst_SOURCES = \
@BUILD_WITH_MSVC_TRUE@	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

subdir = src/fields
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h $(top_builddir)/include/Inventor/SbBasic.h $(top_builddir)/include/Inventor/system/inttypes.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I$(top_builddir) -I$(top_builddir)/include/Inventor -I$(top_builddir)/include/Inventor/system
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
fields_lst_AR = $(AR) cru
fields_lst_LIBADD = 
@HACKING_COMPACT_BUILD_TRUE@am_fields_lst_OBJECTS =
@HACKING_COMPACT_BUILD_FALSE@am_fields_lst_OBJECTS =
fields_lst_OBJECTS = $(am_fields_lst_OBJECTS)
AR = ar
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)

libfields_la_LDFLAGS = 
libfields_la_LIBADD = 
@HACKING_COMPACT_BUILD_TRUE@am_libfields_la_OBJECTS = all.lo
@HACKING_COMPACT_BUILD_FALSE@am_libfields_la_OBJECTS = SoField.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoFieldContainer.lo SoFieldData.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFBitMask.lo SoMFBool.lo SoMFColor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFEngine.lo SoMFEnum.lo SoMFFloat.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFInt32.lo SoMFMatrix.lo SoMFName.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFNode.lo SoMFPath.lo SoMFPlane.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFRotation.lo SoMFShort.lo SoMFString.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFTime.lo SoMFUInt32.lo SoMFUShort.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFVec2f.lo SoMFVec3f.lo SoMFVec4f.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMField.lo SoSFBitMask.lo SoSFBool.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFColor.lo SoSFEngine.lo SoSFEnum.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFFloat.lo SoSFImage.lo SoSFInt32.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFMatrix.lo SoSFName.lo SoSFNode.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFPath.lo SoSFPlane.lo SoSFRotation.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFShort.lo SoSFString.lo SoSFTime.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFTrigger.lo SoSFUInt32.lo SoSFUShort.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFVec2f.lo SoSFVec3f.lo SoSFVec4f.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSField.lo SoGlobalField.lo
libfields_la_OBJECTS = $(am_libfields_la_OBJECTS)
libfields@SUFFIX@LINKHACK_la_LDFLAGS = 
libfields@SUFFIX@LINKHACK_la_LIBADD = 
@HACKING_COMPACT_BUILD_TRUE@am_libfields@SUFFIX@LINKHACK_la_OBJECTS = \
@HACKING_COMPACT_BUILD_TRUE@ all.lo
@HACKING_COMPACT_BUILD_FALSE@am_libfields@SUFFIX@LINKHACK_la_OBJECTS = \
@HACKING_COMPACT_BUILD_FALSE@ SoField.lo SoFieldContainer.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoFieldData.lo SoMFBitMask.lo SoMFBool.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFColor.lo SoMFEngine.lo SoMFEnum.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFFloat.lo SoMFInt32.lo SoMFMatrix.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFName.lo SoMFNode.lo SoMFPath.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFPlane.lo SoMFRotation.lo SoMFShort.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFString.lo SoMFTime.lo SoMFUInt32.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFUShort.lo SoMFVec2f.lo SoMFVec3f.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoMFVec4f.lo SoMField.lo SoSFBitMask.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFBool.lo SoSFColor.lo SoSFEngine.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFEnum.lo SoSFFloat.lo SoSFImage.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFInt32.lo SoSFMatrix.lo SoSFName.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFNode.lo SoSFPath.lo SoSFPlane.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFRotation.lo SoSFShort.lo SoSFString.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFTime.lo SoSFTrigger.lo SoSFUInt32.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFUShort.lo SoSFVec2f.lo SoSFVec3f.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSFVec4f.lo SoSField.lo SoGlobalField.lo
libfields@SUFFIX@LINKHACK_la_OBJECTS = \
$(am_libfields@SUFFIX@LINKHACK_la_OBJECTS)
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXFLAGS = @CXXFLAGS@
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(fields_lst_SOURCES) $(EXTRA_fields_lst_SOURCES) \
$(libfields_la_SOURCES) $(EXTRA_libfields_la_SOURCES) \
$(libfields@SUFFIX@LINKHACK_la_SOURCES) \
$(EXTRA_libfields@SUFFIX@LINKHACK_la_SOURCES)
HEADERS = $(libfieldsinc_HEADERS)

depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
@AMDEP@DEP_FILES = $(DEPDIR)/SoField.Plo $(DEPDIR)/SoField.Po \
@AMDEP@ $(DEPDIR)/SoFieldContainer.Plo $(DEPDIR)/SoFieldContainer.Po \
@AMDEP@ $(DEPDIR)/SoFieldData.Plo $(DEPDIR)/SoFieldData.Po \
@AMDEP@ $(DEPDIR)/SoGlobalField.Plo $(DEPDIR)/SoGlobalField.Po \
@AMDEP@ $(DEPDIR)/SoMFBitMask.Plo $(DEPDIR)/SoMFBitMask.Po \
@AMDEP@ $(DEPDIR)/SoMFBool.Plo $(DEPDIR)/SoMFBool.Po \
@AMDEP@ $(DEPDIR)/SoMFColor.Plo $(DEPDIR)/SoMFColor.Po \
@AMDEP@ $(DEPDIR)/SoMFEngine.Plo $(DEPDIR)/SoMFEngine.Po \
@AMDEP@ $(DEPDIR)/SoMFEnum.Plo $(DEPDIR)/SoMFEnum.Po \
@AMDEP@ $(DEPDIR)/SoMFFloat.Plo $(DEPDIR)/SoMFFloat.Po \
@AMDEP@ $(DEPDIR)/SoMFInt32.Plo $(DEPDIR)/SoMFInt32.Po \
@AMDEP@ $(DEPDIR)/SoMFMatrix.Plo $(DEPDIR)/SoMFMatrix.Po \
@AMDEP@ $(DEPDIR)/SoMFName.Plo $(DEPDIR)/SoMFName.Po \
@AMDEP@ $(DEPDIR)/SoMFNode.Plo $(DEPDIR)/SoMFNode.Po \
@AMDEP@ $(DEPDIR)/SoMFPath.Plo $(DEPDIR)/SoMFPath.Po \
@AMDEP@ $(DEPDIR)/SoMFPlane.Plo $(DEPDIR)/SoMFPlane.Po \
@AMDEP@ $(DEPDIR)/SoMFRotation.Plo $(DEPDIR)/SoMFRotation.Po \
@AMDEP@ $(DEPDIR)/SoMFShort.Plo $(DEPDIR)/SoMFShort.Po \
@AMDEP@ $(DEPDIR)/SoMFString.Plo $(DEPDIR)/SoMFString.Po \
@AMDEP@ $(DEPDIR)/SoMFTime.Plo $(DEPDIR)/SoMFTime.Po \
@AMDEP@ $(DEPDIR)/SoMFUInt32.Plo $(DEPDIR)/SoMFUInt32.Po \
@AMDEP@ $(DEPDIR)/SoMFUShort.Plo $(DEPDIR)/SoMFUShort.Po \
@AMDEP@ $(DEPDIR)/SoMFVec2f.Plo $(DEPDIR)/SoMFVec2f.Po \
@AMDEP@ $(DEPDIR)/SoMFVec3f.Plo $(DEPDIR)/SoMFVec3f.Po \
@AMDEP@ $(DEPDIR)/SoMFVec4f.Plo $(DEPDIR)/SoMFVec4f.Po \
@AMDEP@ $(DEPDIR)/SoMField.Plo $(DEPDIR)/SoMField.Po \
@AMDEP@ $(DEPDIR)/SoSFBitMask.Plo $(DEPDIR)/SoSFBitMask.Po \
@AMDEP@ $(DEPDIR)/SoSFBool.Plo $(DEPDIR)/SoSFBool.Po \
@AMDEP@ $(DEPDIR)/SoSFColor.Plo $(DEPDIR)/SoSFColor.Po \
@AMDEP@ $(DEPDIR)/SoSFEngine.Plo $(DEPDIR)/SoSFEngine.Po \
@AMDEP@ $(DEPDIR)/SoSFEnum.Plo $(DEPDIR)/SoSFEnum.Po \
@AMDEP@ $(DEPDIR)/SoSFFloat.Plo $(DEPDIR)/SoSFFloat.Po \
@AMDEP@ $(DEPDIR)/SoSFImage.Plo $(DEPDIR)/SoSFImage.Po \
@AMDEP@ $(DEPDIR)/SoSFInt32.Plo $(DEPDIR)/SoSFInt32.Po \
@AMDEP@ $(DEPDIR)/SoSFMatrix.Plo $(DEPDIR)/SoSFMatrix.Po \
@AMDEP@ $(DEPDIR)/SoSFName.Plo $(DEPDIR)/SoSFName.Po \
@AMDEP@ $(DEPDIR)/SoSFNode.Plo $(DEPDIR)/SoSFNode.Po \
@AMDEP@ $(DEPDIR)/SoSFPath.Plo $(DEPDIR)/SoSFPath.Po \
@AMDEP@ $(DEPDIR)/SoSFPlane.Plo $(DEPDIR)/SoSFPlane.Po \
@AMDEP@ $(DEPDIR)/SoSFRotation.Plo $(DEPDIR)/SoSFRotation.Po \
@AMDEP@ $(DEPDIR)/SoSFShort.Plo $(DEPDIR)/SoSFShort.Po \
@AMDEP@ $(DEPDIR)/SoSFString.Plo $(DEPDIR)/SoSFString.Po \
@AMDEP@ $(DEPDIR)/SoSFTime.Plo $(DEPDIR)/SoSFTime.Po \
@AMDEP@ $(DEPDIR)/SoSFTrigger.Plo $(DEPDIR)/SoSFTrigger.Po \
@AMDEP@ $(DEPDIR)/SoSFUInt32.Plo $(DEPDIR)/SoSFUInt32.Po \
@AMDEP@ $(DEPDIR)/SoSFUShort.Plo $(DEPDIR)/SoSFUShort.Po \
@AMDEP@ $(DEPDIR)/SoSFVec2f.Plo $(DEPDIR)/SoSFVec2f.Po \
@AMDEP@ $(DEPDIR)/SoSFVec3f.Plo $(DEPDIR)/SoSFVec3f.Po \
@AMDEP@ $(DEPDIR)/SoSFVec4f.Plo $(DEPDIR)/SoSFVec4f.Po \
@AMDEP@ $(DEPDIR)/SoSField.Plo $(DEPDIR)/SoSField.Po $(DEPDIR)/all.Plo \
@AMDEP@ $(DEPDIR)/all.Po
DIST_COMMON = $(libfieldsinc_HEADERS) Makefile.am Makefile.in

SOURCES = $(fields_lst_SOURCES) $(EXTRA_fields_lst_SOURCES) $(libfields_la_SOURCES) $(EXTRA_libfields_la_SOURCES) $(libfields@SUFFIX@LINKHACK_la_SOURCES) $(EXTRA_libfields@SUFFIX@LINKHACK_la_SOURCES)
OBJECTS = $(am_fields_lst_OBJECTS) $(am_libfields_la_OBJECTS) $(am_libfields@SUFFIX@LINKHACK_la_OBJECTS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .h .lo .o .obj

$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/fields/Makefile

Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)

libfields.la: $(libfields_la_OBJECTS) $(libfields_la_DEPENDENCIES)
	$(CXXLINK)  $(libfields_la_LDFLAGS) $(libfields_la_OBJECTS) $(libfields_la_LIBADD) $(LIBS)

libfields@SUFFIX@LINKHACK.la: $(libfields@SUFFIX@LINKHACK_la_OBJECTS) $(libfields@SUFFIX@LINKHACK_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(libfields@SUFFIX@LINKHACK_la_LDFLAGS) $(libfields@SUFFIX@LINKHACK_la_OBJECTS) $(libfields@SUFFIX@LINKHACK_la_LIBADD) $(LIBS)
install-libfieldsincHEADERS: $(libfieldsinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libfieldsincdir)
	@list='$(libfieldsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(libfieldsincdir)/$$f"; \
	  $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(libfieldsincdir)/$$f; \
	done

uninstall-libfieldsincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libfieldsinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libfieldsincdir)/$$f"; \
	  rm -f $(DESTDIR)$(libfieldsincdir)/$$f; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $$here

distclean-tags:
	-rm -f TAGS ID

@AMDEP@@_am_include@ $(DEPDIR)/SoField.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoField.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoFieldContainer.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoFieldContainer.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoFieldData.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoFieldData.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoGlobalField.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoGlobalField.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFBitMask.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFBitMask.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFBool.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFBool.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFColor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFColor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFEngine.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFEngine.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFEnum.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFEnum.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFFloat.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFFloat.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFInt32.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFInt32.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFMatrix.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFMatrix.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFName.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFName.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFNode.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFNode.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFPath.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFPath.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFPlane.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFPlane.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFRotation.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFRotation.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFShort.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFShort.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFString.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFString.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFTime.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFTime.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFUInt32.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFUInt32.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFUShort.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFUShort.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFVec2f.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFVec2f.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFVec3f.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFVec3f.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMFVec4f.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMFVec4f.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoMField.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoMField.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFBitMask.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFBitMask.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFBool.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFBool.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFColor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFColor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFEngine.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFEngine.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFEnum.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFEnum.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFFloat.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFFloat.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFImage.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFImage.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFInt32.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFInt32.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFMatrix.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFMatrix.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFName.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFName.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFNode.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFNode.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFPath.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFPath.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFPlane.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFPlane.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFRotation.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFRotation.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFShort.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFShort.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFString.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFString.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFTime.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFTime.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFTrigger.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFTrigger.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFUInt32.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFUInt32.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFUShort.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFUShort.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFVec2f.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFVec2f.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFVec3f.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFVec3f.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSFVec4f.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSFVec4f.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSField.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSField.Po
@AMDEP@@_am_include@ $(DEPDIR)/all.Plo
@AMDEP@@_am_include@ $(DEPDIR)/all.Po

distclean-depend:
	-rm -rf $(DEPDIR)

@AMDEP@CXXDEPMODE = @CXXDEPMODE@

.cpp.o:
@AMDEP@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.lo:
@AMDEP@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(top_srcdir)/include/Inventor/fields
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(libfieldsincdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am

install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_PROGRAM_ENV='$(INSTALL_STRIP_PROGRAM_ENV)' install

mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f Makefile.in
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi:

dvi-am:

info:

info-am:

install-data-am: install-libfieldsincHEADERS

install-exec-am: install-libLTLIBRARIES

install-info:

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-libLTLIBRARIES uninstall-libfieldsincHEADERS

.PHONY: all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-libLTLIBRARIES \
	install-libfieldsincHEADERS install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libfieldsincHEADERS


# this rule causes a make warning, so we remove it when it is not in use
@BUILD_WITH_MSVC_TRUE@fields.lst: Makefile $(fields_lst_OBJECTS)
@BUILD_WITH_MSVC_TRUE@	@echo "Linking fields.lst..."; \
@BUILD_WITH_MSVC_TRUE@	echo $(CC) /LST:fields.lst \
@BUILD_WITH_MSVC_TRUE@	  $(fields_lst_OBJECTS); \
@BUILD_WITH_MSVC_TRUE@	$(CC) /LST:fields.lst \
@BUILD_WITH_MSVC_TRUE@	  $(fields_lst_OBJECTS);

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
