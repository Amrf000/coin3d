# Makefile.in generated automatically by automake 1.4e from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

@SET_MAKE@
AMDEP = @AMDEP@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
CC = @CC@
COIN_DOC_HTML = @COIN_DOC_HTML@
COIN_DOC_MAN = @COIN_DOC_MAN@
COIN_EXTRA_CPPFLAGS = @COIN_EXTRA_CPPFLAGS@
COIN_EXTRA_CXXFLAGS = @COIN_EXTRA_CXXFLAGS@
COIN_EXTRA_LDFLAGS = @COIN_EXTRA_LDFLAGS@
COIN_EXTRA_LIBS = @COIN_EXTRA_LIBS@
COIN_HACKING_LIBDIRS = @COIN_HACKING_LIBDIRS@
COIN_MAJOR_VERSION = @COIN_MAJOR_VERSION@
COIN_MICRO_VERSION = @COIN_MICRO_VERSION@
COIN_MINOR_VERSION = @COIN_MINOR_VERSION@
COIN_VERSION = @COIN_VERSION@
CONFIG = @CONFIG@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSUFFIX = @DSUFFIX@
EXEEXT = @EXEEXT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTALL_STRIP_PROGRAM_ENV = @INSTALL_STRIP_PROGRAM_ENV@
LIBFLAGS = @LIBFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
SUFFIX = @SUFFIX@
VERSION = @VERSION@
_am_include = @_am_include@
coin_build_dir = @coin_build_dir@
coin_configure_date = @coin_configure_date@
coin_html_dir = @coin_html_dir@
coin_man_dir = @coin_man_dir@
coin_src_dir = @coin_src_dir@
install_sh = @install_sh@
path_tag = @path_tag@
sim_ac_doxygen_exe = @sim_ac_doxygen_exe@
sim_ac_perl_exe = @sim_ac_perl_exe@
sim_ac_simage_configcmd = @sim_ac_simage_configcmd@


RegularSources = \
	SoAlarmSensor.cpp \
	SoDataSensor.cpp \
	SoDelayQueueSensor.cpp \
	SoFieldSensor.cpp \
	SoIdleSensor.cpp \
	SoNodeSensor.cpp \
	SoOneShotSensor.cpp \
	SoPathSensor.cpp \
	SoSensor.cpp \
	SoSensorManager.cpp \
	SoTimerQueueSensor.cpp \
	SoTimerSensor.cpp

LinkHackSources = \
	all.cpp

PublicHeaders = \
	$(top_srcdir)/include/Inventor/sensors/SoSensors.h \
	$(top_srcdir)/include/Inventor/sensors/SoAlarmSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoDataSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoDelayQueueSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoFieldSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoIdleSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoNodeSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoOneShotSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoPathSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoSensorManager.h \
	$(top_srcdir)/include/Inventor/sensors/SoTimerQueueSensor.h \
	$(top_srcdir)/include/Inventor/sensors/SoTimerSensor.h

PrivateHeaders = 
@HACKING_COMPACT_BUILD_TRUE@BuildSources = $(LinkHackSources)
@HACKING_COMPACT_BUILD_FALSE@BuildSources = $(RegularSources)

@BUILD_WITH_MSVC_TRUE@noinst_LIBRARIES = sensors.lst
@BUILD_WITH_MSVC_FALSE@@HACKING_DYNAMIC_MODULES_TRUE@lib_LTLIBRARIES = libsensors@SUFFIX@LINKHACK.la
@BUILD_WITH_MSVC_FALSE@@HACKING_DYNAMIC_MODULES_FALSE@noinst_LTLIBRARIES = libsensors.la

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

INCLUDES = -I$(top_srcdir)/include

libsensors_la_SOURCES = $(BuildSources)
EXTRA_libsensors_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)


libsensors@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libsensors@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)


libsensorsincdir = $(includedir)/Inventor/sensors
libsensorsinc_HEADERS = $(PublicHeaders)

@BUILD_WITH_MSVC_TRUE@sensors_lst_SOURCES = $(BuildSources)
@BUILD_WITH_MSVC_TRUE@EXTRA_sensors_lst_SOURCES = \
@BUILD_WITH_MSVC_TRUE@	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

subdir = src/sensors
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
sensors_lst_AR = $(AR) cru
sensors_lst_LIBADD = 
@HACKING_COMPACT_BUILD_TRUE@am_sensors_lst_OBJECTS =
@HACKING_COMPACT_BUILD_FALSE@am_sensors_lst_OBJECTS =
sensors_lst_OBJECTS = $(am_sensors_lst_OBJECTS)
AR = ar
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)

libsensors_la_LDFLAGS = 
libsensors_la_LIBADD = 
@HACKING_COMPACT_BUILD_TRUE@am_libsensors_la_OBJECTS = all.lo
@HACKING_COMPACT_BUILD_FALSE@am_libsensors_la_OBJECTS = SoAlarmSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoDataSensor.lo SoDelayQueueSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoFieldSensor.lo SoIdleSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoNodeSensor.lo SoOneShotSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoPathSensor.lo SoSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSensorManager.lo SoTimerQueueSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoTimerSensor.lo
libsensors_la_OBJECTS = $(am_libsensors_la_OBJECTS)
libsensors@SUFFIX@LINKHACK_la_LDFLAGS = 
libsensors@SUFFIX@LINKHACK_la_LIBADD = 
@HACKING_COMPACT_BUILD_TRUE@am_libsensors@SUFFIX@LINKHACK_la_OBJECTS = \
@HACKING_COMPACT_BUILD_TRUE@ all.lo
@HACKING_COMPACT_BUILD_FALSE@am_libsensors@SUFFIX@LINKHACK_la_OBJECTS = \
@HACKING_COMPACT_BUILD_FALSE@ SoAlarmSensor.lo SoDataSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoDelayQueueSensor.lo SoFieldSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoIdleSensor.lo SoNodeSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoOneShotSensor.lo SoPathSensor.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoSensor.lo SoSensorManager.lo \
@HACKING_COMPACT_BUILD_FALSE@ SoTimerQueueSensor.lo SoTimerSensor.lo
libsensors@SUFFIX@LINKHACK_la_OBJECTS = \
$(am_libsensors@SUFFIX@LINKHACK_la_OBJECTS)
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXFLAGS = @CXXFLAGS@
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(sensors_lst_SOURCES) $(EXTRA_sensors_lst_SOURCES) \
$(libsensors_la_SOURCES) $(EXTRA_libsensors_la_SOURCES) \
$(libsensors@SUFFIX@LINKHACK_la_SOURCES) \
$(EXTRA_libsensors@SUFFIX@LINKHACK_la_SOURCES)
HEADERS = $(libsensorsinc_HEADERS)

depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
@AMDEP@DEP_FILES = $(DEPDIR)/SoAlarmSensor.Plo \
@AMDEP@ $(DEPDIR)/SoAlarmSensor.Po $(DEPDIR)/SoDataSensor.Plo \
@AMDEP@ $(DEPDIR)/SoDataSensor.Po $(DEPDIR)/SoDelayQueueSensor.Plo \
@AMDEP@ $(DEPDIR)/SoDelayQueueSensor.Po $(DEPDIR)/SoFieldSensor.Plo \
@AMDEP@ $(DEPDIR)/SoFieldSensor.Po $(DEPDIR)/SoIdleSensor.Plo \
@AMDEP@ $(DEPDIR)/SoIdleSensor.Po $(DEPDIR)/SoNodeSensor.Plo \
@AMDEP@ $(DEPDIR)/SoNodeSensor.Po $(DEPDIR)/SoOneShotSensor.Plo \
@AMDEP@ $(DEPDIR)/SoOneShotSensor.Po $(DEPDIR)/SoPathSensor.Plo \
@AMDEP@ $(DEPDIR)/SoPathSensor.Po $(DEPDIR)/SoSensor.Plo \
@AMDEP@ $(DEPDIR)/SoSensor.Po $(DEPDIR)/SoSensorManager.Plo \
@AMDEP@ $(DEPDIR)/SoSensorManager.Po $(DEPDIR)/SoTimerQueueSensor.Plo \
@AMDEP@ $(DEPDIR)/SoTimerQueueSensor.Po $(DEPDIR)/SoTimerSensor.Plo \
@AMDEP@ $(DEPDIR)/SoTimerSensor.Po $(DEPDIR)/all.Plo $(DEPDIR)/all.Po
DIST_COMMON = $(libsensorsinc_HEADERS) Makefile.am Makefile.in

SOURCES = $(sensors_lst_SOURCES) $(EXTRA_sensors_lst_SOURCES) $(libsensors_la_SOURCES) $(EXTRA_libsensors_la_SOURCES) $(libsensors@SUFFIX@LINKHACK_la_SOURCES) $(EXTRA_libsensors@SUFFIX@LINKHACK_la_SOURCES)
OBJECTS = $(am_sensors_lst_OBJECTS) $(am_libsensors_la_OBJECTS) $(am_libsensors@SUFFIX@LINKHACK_la_OBJECTS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .h .lo .o .obj

$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/sensors/Makefile

Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)

libsensors.la: $(libsensors_la_OBJECTS) $(libsensors_la_DEPENDENCIES)
	$(CXXLINK)  $(libsensors_la_LDFLAGS) $(libsensors_la_OBJECTS) $(libsensors_la_LIBADD) $(LIBS)

libsensors@SUFFIX@LINKHACK.la: $(libsensors@SUFFIX@LINKHACK_la_OBJECTS) $(libsensors@SUFFIX@LINKHACK_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(libsensors@SUFFIX@LINKHACK_la_LDFLAGS) $(libsensors@SUFFIX@LINKHACK_la_OBJECTS) $(libsensors@SUFFIX@LINKHACK_la_LIBADD) $(LIBS)
install-libsensorsincHEADERS: $(libsensorsinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libsensorsincdir)
	@list='$(libsensorsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(libsensorsincdir)/$$f"; \
	  $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(libsensorsincdir)/$$f; \
	done

uninstall-libsensorsincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libsensorsinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libsensorsincdir)/$$f"; \
	  rm -f $(DESTDIR)$(libsensorsincdir)/$$f; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $$here

distclean-tags:
	-rm -f TAGS ID

@AMDEP@@_am_include@ $(DEPDIR)/SoAlarmSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoAlarmSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoDataSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoDataSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoDelayQueueSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoDelayQueueSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoFieldSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoFieldSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoIdleSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoIdleSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoNodeSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoNodeSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoOneShotSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoOneShotSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoPathSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoPathSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoSensorManager.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoSensorManager.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoTimerQueueSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoTimerQueueSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/SoTimerSensor.Plo
@AMDEP@@_am_include@ $(DEPDIR)/SoTimerSensor.Po
@AMDEP@@_am_include@ $(DEPDIR)/all.Plo
@AMDEP@@_am_include@ $(DEPDIR)/all.Po

distclean-depend:
	-rm -rf $(DEPDIR)

@AMDEP@CXXDEPMODE = @CXXDEPMODE@

.cpp.o:
@AMDEP@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.lo:
@AMDEP@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(top_srcdir)/include/Inventor/sensors
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(libsensorsincdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am

install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_PROGRAM_ENV='$(INSTALL_STRIP_PROGRAM_ENV)' install

mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f Makefile.in
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi:

dvi-am:

info:

info-am:

install-data-am: install-libsensorsincHEADERS

install-exec-am: install-libLTLIBRARIES

install-info:

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-libLTLIBRARIES uninstall-libsensorsincHEADERS

.PHONY: all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-libLTLIBRARIES \
	install-libsensorsincHEADERS install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libsensorsincHEADERS


# this rule causes a make warning, so we remove it when it is not in use
@BUILD_WITH_MSVC_TRUE@sensors.lst: Makefile $(sensors_lst_OBJECTS)
@BUILD_WITH_MSVC_TRUE@	@echo "Linking sensors.lst..."; \
@BUILD_WITH_MSVC_TRUE@	echo $(CC) /LST:sensors.lst \
@BUILD_WITH_MSVC_TRUE@	  $(sensors_lst_OBJECTS); \
@BUILD_WITH_MSVC_TRUE@	$(CC) /LST:sensors.lst \
@BUILD_WITH_MSVC_TRUE@	  $(sensors_lst_OBJECTS);

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
